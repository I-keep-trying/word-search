{"version":3,"sources":["components/Heading.js","services/dictionary.js","components/SearchForm.js","services/stringDiff.js","components/Footer.js","App.js","index.js"],"names":["HeaderMenu","Menu","inverted","className","Item","as","header","Icon","name","size","getWords","word","a","axios","get","response","data","SearchForm","useState","results","setResults","userInput","setUserInput","exclusions","setExclusions","setCopied","toggle","setToggle","buttonText","setButtonText","console","log","filterExclusions","arr","reg","exArr","split","join","regx","RegExp","reduceArr","reduce","acc","item","i","currChar","charAt","index","matchAll","length","push","filterArr","filter","obj","includes","filterStrings","state","arr1","arr2","forEach","newArr","b","match","strMatch1","strMatch2","n","parseInt","error","stringDiff","toast","handleClick","e","preventDefault","wildcards1","numeric","wildcards2","numUserInput","replace","r","Container","fluid","Segment","List","celled","style","display","Content","verticalAlign","Header","Form","Field","inline","Input","label","iconPosition","type","maxLength","value","placeholder","onChange","target","icon","toLowerCase","Button","color","onClick","newResults","sort1","sort","sort2","text","map","onCopy","nanoid","Footer","Group","horizontal","href","rel","App","pauseOnFocusLoss","autoClose","transition","Slide","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.465af8d2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Menu, Icon } from 'semantic-ui-react'\r\n\r\nconst HeaderMenu = () => {\r\n  return (\r\n    <Menu inverted className=\"ui top fixed menu\">\r\n      <Menu.Item as=\"a\" header>\r\n        <Icon name=\"meh outline\" size=\"big\" />\r\n        Word Search\r\n      </Menu.Item>\r\n      <Menu.Item as=\"a\">Home</Menu.Item>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default HeaderMenu\r\n","import axios from 'axios'\n\nconst baseUrl = 'https://api.datamuse.com/words?sp='\nconst udUrl = 'http://api.urbandictionary.com/v0/define?term='\n\nexport const getWords = async (word) => {\n  const response = await axios.get(`${baseUrl}${word}`)\n  return response.data\n}\n\nexport const getUDWords = async (word) => {\n  const response = await axios.get(`${udUrl}${word}`)\n  return response.data\n}\n","import React, { useState } from 'react'\nimport {\n  Button,\n  Container,\n  Segment,\n  Form,\n  Input,\n  List,\n} from 'semantic-ui-react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { nanoid } from 'nanoid'\nimport { stringDiff } from '../services/stringDiff'\nimport { toast } from 'react-toastify'\n\nimport { getWords } from '../services/dictionary'\nimport './MainContent.css'\n\nconst SearchForm = () => {\n  const [results, setResults] = useState([])\n  const [userInput, setUserInput] = useState('')\n  const [exclusions, setExclusions] = useState('')\n  // eslint-disable-next-line no-unused-vars\n  const [copied, setCopied] = useState(false)\n  const [toggle, setToggle] = useState(false)\n  const [buttonText, setButtonText] = useState('Sort a-z')\n  console.log('toggle?', toggle)\n  const handleSort = () => {\n    const newResults = [...results]\n    const sort1 = results.sort((a, b) => (a.word < b.word ? 1 : -1))\n    const sort1tog = () => {\n      setToggle(false)\n      setButtonText('Sort a - z')\n\n      setResults(sort1)\n    }\n    const sort2 = newResults.sort((a, b) => (a.word < b.word ? -1 : 1))\n\n    const sort2tog = () => {\n      setToggle(true)\n      setButtonText('Sort z - a')\n\n      setResults(sort2)\n    }\n    toggle === false ? sort2tog() : sort1tog()\n  }\n\n  const filterExclusions = async (arr, reg) => {\n    const exArr = exclusions.split('').join('|')\n    const regx = new RegExp(`${exArr}`, 'g')\n    const reduceArr = arr.reduce((acc, item) => {\n      for (let i in reg) {\n        let currChar = item.word.charAt(reg[i].index)\n        let matchedItem = [...currChar.matchAll(regx)]\n        if (matchedItem.length > 0) {\n          acc.push(item.word)\n        }\n      }\n      return acc\n    }, [])\n\n    const filterArr = arr.filter((obj) => {\n      return reduceArr.includes(obj.word) ? null : obj.word\n    })\n    if (reg[0][0] !== '?') {\n      filterStrings(userInput, filterArr)\n    } else {\n      setResults((state) => [...state, ...filterArr])\n    }\n  }\n\n  const filterStrings = (arr1, arr2) => {\n    return arr2.forEach((obj) => {\n      const newArr = stringDiff(arr1, obj.word)\n\n      if (newArr.error) {\n        toast(`Error: ${newArr.error}; Param: ${obj.word}`)\n      } else if (newArr.results.length > 0) {\n        setResults((state) => [...state, ...newArr.results])\n      } else {\n        return results\n      }\n    })\n  }\n\n  const handleClick = async (e) => {\n    e.preventDefault()\n    setResults([])\n    let wildcards1 = [...userInput.matchAll(/\\?/g)]\n    let numeric = userInput.match(/\\d/g)\n    let wildcards2 = [...userInput.matchAll(/\\d/g)]\n    const regx = /\\d/g\n    const numUserInput = userInput.replace(regx, '?')\n    let r\n    if (userInput.length > 10) {\n      toast(\n        'Word search is limited to 30 characters or less. Please adjust search accordingly.'\n      )\n    } else if (exclusions.length > 25) {\n      toast('Exclusions are limited to 25 characters or less.')\n    } else if (!exclusions) {\n      if (wildcards1.length > 0 || numeric === null) {\n        r = await getWords(userInput)\n        setResults((state) => [...state, ...r])\n      } else if (numeric !== null) {\n        r = await getWords(numUserInput)\n        return filterStrings(userInput, r)\n      } else {\n        toast('something weird happened...')\n      }\n    } else {\n      if (wildcards1.length > 0) {\n        r = await getWords(userInput)\n        return filterExclusions(r, wildcards1)\n      } else {\n        r = await getWords(numUserInput)\n        return filterExclusions(r, wildcards2)\n      }\n    }\n  }\n\n  const copyResults = () => {\n    return results?.map((obj) => obj.word)\n  }\n\n  const handleCopy = () => {\n    setCopied(true)\n    toast('List copied!')\n  }\n\n  return (\n    <Container fluid className=\"content-container\">\n      <Segment className=\"main-content\">\n        <h1>Cryptogram Word Search</h1>\n        <List celled>\n          <List.Item style={{ display: 'inline-block' }}>\n            <List.Content verticalAlign=\"middle\">\n              <List.Header as=\"h2\">\n                Use one ? for each individual unknown letter.\n              </List.Header>\n              Example: b?ar might return bear, or boar.\n            </List.Content>\n          </List.Item>\n          <List.Item>\n            <List.Content verticalAlign=\"middle\">\n              <List.Header as=\"h2\">\n                Use numeric digits 0 - 9 for two or more of the same letter.\n              </List.Header>\n              For example, if a word has more than one set of repeating letters,\n              you can use different numbers for different sets of letters. For\n              example, 'balloon' could be 'ba1122n', or 'excellence' could be:\n              1xc1221nc1.\n            </List.Content>\n          </List.Item>\n\n          <List.Item>\n            <List.Content verticalAlign=\"middle\">\n              <List.Header as=\"h2\">Exclusions:</List.Header>\n              Any letters entered into the 'exclusions' filter will eliminate\n              any results containing the excluded letter(s) in the wildcard \"?\"\n              position(s). The provided known letters are ignored, i.e., if your\n              query is 'ba?y', and you exclude the letter 'b', the word 'baby'\n              will NOT be included in the returned list.\n            </List.Content>\n          </List.Item>\n        </List>\n        <br />\n        <Form>\n          <Form.Field inline>\n            <Input\n              label=\"Exclude: \"\n              fluid\n              iconPosition=\"left\"\n              type=\"text\"\n              maxLength=\"25\"\n              value={exclusions}\n              placeholder=\"Letters to exclude from search query\"\n              onChange={({ target }) => setExclusions(target.value)}\n            />\n          </Form.Field>\n          <Form.Field inline>\n            <Input\n              fluid\n              icon=\"search\"\n              iconPosition=\"left\"\n              placeholder=\"ab??ef\"\n              type=\"text\"\n              maxLength=\"30\"\n              value={userInput}\n              onChange={({ target }) =>\n                setUserInput(target.value.toLowerCase())\n              }\n            />\n          </Form.Field>\n\n          <Button color=\"teal\" size=\"large\" onClick={handleClick}>\n            Search\n          </Button>\n          {results.length > 0 ? (\n            <>\n              <Button color=\"teal\" size=\"large\" onClick={handleSort}>\n                {buttonText}\n              </Button>\n              <CopyToClipboard\n                className=\"CopyToClipboard\"\n                text={copyResults()}\n                onCopy={handleCopy}\n              >\n                <Button color=\"teal\" size=\"large\">\n                  Copy List\n                </Button>\n              </CopyToClipboard>\n            </>\n          ) : (\n            <></>\n          )}\n          <List\n            verticalAlign=\"middle\"\n            value={results}\n            onChange={() => setCopied(false)}\n          >\n            {results?.map((obj) => (\n              <List.Item key={nanoid()}>{obj.word}</List.Item>\n            ))}\n          </List>\n        </Form>\n      </Segment>\n    </Container>\n  )\n}\n\nexport default SearchForm\n","export const stringDiff = (a, b) => {\n \n  let match = false,\n    error = ''\n  const results = []\n\n  for (const i in b) {\n    const strMatch1 = [...a.matchAll(a[i])]\n    const strMatch2 = [...b.matchAll(b[i])]\n    let n = parseInt(i)\n\n    if (strMatch1.length !== strMatch2.length) {\n      match = false\n      n = b.length\n      return { results }\n    } else if (strMatch1.length === strMatch2.length && b.length === n + 1) {\n      match = true\n    }\n    if (match === true) {\n      results.push({ word: b })\n    }\n  }\n\n  return { match, results, error }\n}\n\n// originally from https://github.com/Lin-H/comparer - some changes made\n","import React from 'react'\r\nimport { Icon, Segment } from 'semantic-ui-react'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Segment.Group\r\n      horizontal\r\n      className=\"ui inverted bottom fixed three item menu\"\r\n    >\r\n      <Segment></Segment>\r\n      <Segment inverted>\r\n        <a\r\n          style={{ color: 'white' }}\r\n          href=\"https://github.com/I-keep-trying/word-search\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Icon name=\"github outline\" size=\"big\" />\r\n        </a>\r\n        CopyRight Andrea Crego 2020\r\n      </Segment>\r\n      <Segment></Segment>\r\n    </Segment.Group>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Container } from 'semantic-ui-react'\r\nimport HeaderMenu from './components/Heading'\r\nimport SearchForm from './components/SearchForm'\r\nimport Footer from './components/Footer'\r\nimport { ToastContainer, Slide } from 'react-toastify'\r\nimport './ReactToastify.css'\r\n\r\nconst App = () => (\r\n  <Container fluid>\r\n    <HeaderMenu />\r\n    <ToastContainer\r\n      pauseOnFocusLoss={false}\r\n      autoClose={2000}\r\n      transition={Slide}\r\n    />\r\n    <SearchForm />\r\n    <Footer />\r\n  </Container>\r\n)\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n//https://github.com/james-leung/semantic-ui-project"],"sourceRoot":""}